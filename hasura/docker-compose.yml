version: "3.6"
name: "dragonai_hasura"
services:
  db:
    container_name: "dragonai_db"
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/pgsql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
    command: -p 5432
    ports:
      - "5432:5432"
  graphql-engine:
    container_name: "dragonai_gql_engine"
    image: hasura/graphql-engine:v2.37.0
    depends_on:
      - "db"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@db:5432/postgres
      PG_DATABASE_URL: postgres://postgres:postgrespassword@db:5432/postgres
      HASURA_ENV: local
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${LOCAL_HASURA_GRAPHQL_ADMIN_SECRET}
      CLOUD_FUNCTIONS_ENDPOINT: ${CLOUD_FUNCTIONS_ENDPOINT}
      HASURA_GRAPHQL_SERVER_PORT: 8080
      HASURA_GRAPHQL_PG_STRIPES: 1
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public
      HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE: 100
      HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL: 1000
      HASURA_GRAPHQL_LOG_LEVEL: debug
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "naming_convention"
    ports:
      - "8080:8080"
volumes:
  db_data:
